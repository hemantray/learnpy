{\rtf1\ansi\ansicpg1251\deff0\nouicompat\deflang1058{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.16299}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 - Hello and welcome back.\par
Today, we'll start talking about sets\par
and we'll begin by giving things names\par
so we can describe them precisely and concisely.\par
And we'll talk about elements, sets,\par
some common sets, membership and empty and universal sets.\par
We'll begin with the foundation of sets\par
or the building blocks and they're so basic\par
that we'll think of them as our atoms.\par
So, maybe now wonder that we call them elements.\par
And elements can be anything, they could be a famous\par
athlete, like Leo Messi, or a tech company like Google\par
or a helpful drug like aspirin.\par
And in reality the sets we'll deal with typically,\par
I'm sorry the elements we're dealing with typically\par
will be more structured like, letters or\par
words or documents or webpages.\par
And because we care about probability and statistics\par
then we'll talk a lot about numbers\par
but at some point finding key pictures for some\par
and different things becomes a little bit tedious\par
so the numbers will look like this but of course, we'll know\par
we're talking about really exciting stuff.\par
Now, beyond individual elements as important as they may be\par
we often want to look at the bigger picture.\par
And so to do that we look at sets\par
which are nothing but collection of elements.\par
In fact, collection is just a synonym\par
for set, just a fancy name for a set.\par
Okay, and so to define a set what we'll need to do is\par
we need to specify the elements\par
and we do it by simply listing the elements\par
and putting them inside a frame.\par
And so using this method we can specify many different sets\par
and we can specify sets explicitly.\par
For example, everyone knows that a coin has two sides,\par
heads and tails and bits are zero and one\par
and a die has six faces and once the set\par
becomes a little larger then we often want to be\par
a little more implicit and leave some elements out.\par
For example if we're talking about a set of digits\par
may said zero, one up to nine or\par
the set of letters, a, b up to z\par
and days Monday up to Sunday.\par
And if the sets become even larger and more complicated\par
then sometimes we'll just be descriptive when we\par
specify them and we can say for example\par
the set of all four-letter words and everyone knows what\par
we're talking about love, like, dear and so on.\par
Now, as we progress in this description hierarchy\par
we get to be more compact and more expressive.\par
So, this descriptions are more compact and more expressive\par
and both of these are good but they also get to be more\par
ambiguous so it's a little dangerous.\par
So, whatever method you want to choose\par
just make sure you focus on one thing\par
and that is make sure that you are clear.\par
Alright, now we can use this\par
to describe several common sets.\par
One of the most common ones is the set of integers, they go\par
from minus infinity to plus infinity, including minus two,\par
minus one and so on and is denoted by Z.\par
The set of natural numbers that start from zero\par
and then go one, two and continues\par
so it's about half of the integers denoted by N.\par
The set of positive numbers one, two, three\par
and so on denoted by P for positive.\par
The rational numbers which are just integer ratios of m\par
and n so rationals of two integers when the denominator\par
is non-zero so we don't divide by zero and these are called\par
Q for quotients because they're quotients of numbers.\par
And the reals whose definition is so simple that you\par
can just look it up on Google.\par
Okay, now you'll notice that we use here\par
and we typically use mnemonic names that we can remember\par
for example, R for real, Q for quotients, P for positive,\par
N for non-negative and the only one that you may not\par
understand is Z for the integers.\par
And it's not like they ran out of letters and had\par
to choose the last one because this would be the first set\par
that they defined so it's not the issue.\par
And the real reason is that they're\par
named after Zahl, which in German means number.\par
Okay so you can also see here, we'll be using convention\par
maybe convenient convention and that is we'll use for sets,\par
we'll use upper case letters like here and for elements\par
we'll use lower case letters like\par
small a's, we're gonna see some.\par
Alright, now once you have sets, we want to say what's\par
included in the set and what's excluded in the set.\par
And so if an elements x is in a set A it is called a member\par
of the set or even said belong to A, and\par
is denoted by x with this symbol belongs to A, okay.\par
So, for example zero belongs to zero, one\par
while and one belongs to zero, one and\par
pi one belongs to zero, one and\par
pi belongs to the set of real numbers.\par
Equivalently, if x belongs to A we said\par
that A contains x and you'll write it like this\par
A with this symbol which is just the original\par
symbol belongs to reversed, okay.\par
So, for example zero, one contains zero,\par
zero, one contains one and the real numbers contain pi.\par
Alright, now we also want to talk about the opposite\par
of this thing and whenever you have some nice term\par
like a nice shoe you want also to have the other one\par
so we're going to talk about the converse of these terms.\par
So, if x is not in a set A, then x is not a member\par
or does not belong to A, it's denoted by x and\par
we cross the belongs to sign, x does not belong to A.\par
For example two does not belong to zero, one\par
and pi does not belong to the set of rational numbers.\par
Okay, and equivalently, instead of saying that\par
x does not belong to A we can just say that\par
A does not contain x which is denoted by this\par
A does not contain x, so for example,\par
zero, one does not contain two and\par
the rational numbers do not contain pi.\par
Alright, so with these definitions\par
we are ready for our first quiz.\par
It's a quiz about a set of states,\par
is in fact about a set of the United States.\par
So, I'll show you a couple of far states\par
and you'll tell me if they belong to the set or don't.\par
So, for example does this state belong to the United States?\par
And the answer is yes, it belongs to it, it belongs to the\par
United States, it's the state of California.\par
How about this state, belong or does not belong?\par
Yes, it's the state of Florida.\par
And this state, belong to the set of states?\par
Yes, it also belongs, the state of New York.\par
And finally, does this state belong or does not belong?\par
No it doesn't, this is the state of Israel.\par
Alright, so in the definition of sets,\par
some things matter but some things don't.\par
So, for example the order doesn't matter.\par
The set zero, one is exactly the same as one, zero\par
and you can see, for example if you have the set of states,\par
the order doesn't matter, we're just looking at\par
a collection of all states, all 50 states here,\par
it doesn't matter how we specify them.\par
Another thing that doesn't matter is repetition.\par
If you write zero, one, it's the same as zero, one, one, one\par
and just think of it that if you're gonna insult me once,\par
or you're gonna insult me many times,\par
it's pretty much the same, okay.\par
Now, you can ask what if and what if for example, order\par
matters, what if you want to specify the order?\par
Then you can use order tuples, for example zero, one\par
and that's going to be different from one, zero.\par
So, here the order matters and if repetition matters,\par
then you'll use what's called multiset or bag\par
but don't worry, as they say, we'll cross\par
this bridge in a few lectures.\par
Alright, okay, so let's, whenever you have a whole\par
bunch of sets, of course some of them are going to\par
be a little more special than others\par
and now we're going to talk about two special sets.\par
We're gonna talk about the empty set\par
which contains no elements and it's denoted by\par
this symbol here, it looks like phi but is not exactly\par
this is a symbol for empty set or it's denoted by\par
this collection it's a collection of elements\par
but there's nothing inside, in fact, this is the\par
Python notation for an empty set, this we're going to see.\par
So, this set has the property that for every x that you take\par
x does not belong to it, okay.\par
And you'll recall from logical notation that\par
for all A inverted like this means for all or every so\par
every x or all x cannot belong today on this set.\par
We'll also consider the opposite of the empty set\par
which is the universal set, so the empty set is\par
the smaller set you can think of and the universal set\par
is the larger set you can think of.\par
And this set contains all possible elements\par
and will denoted by omega, so now,\par
for every x that you take x will belong to omega.\par
And the reason we introduce omega is because\par
it lets us consider only relevant elements.\par
So, for example if we take omega to be Z to a set of\par
integers then if we talk about a prime then we know that it\par
means numbers like two, three, five and so on, prime numbers\par
and it does not mean Amazon Prime or prime real estate\par
or even prime ribs, as much as some people would like it.\par
Alright, notice that omega, the universal set will\par
depend on the application so for example if we talk about\par
temperature, maybe we'll choose omega to be the set of real\par
numbers and if we talk about text maybe omega will\par
be the set of words, so omega changes with\par
application but there's always\par
gonna be only one empty set, is the set with no elements.\par
So, there could be many different universal sets omega that\par
depend on what you want to do but\par
there's always gonna be one empty set,\par
it's the set with no elements.\par
Alright, so let's see how Python deals with (mumbles) sets.\par
So, first how do you define a set in python?\par
So, to define a set you can just specify the set or\par
write set and then in parenthesis\par
the function and then inside specify the set.\par
So, for example, you can write set one equals one, two\par
and then print set one, including in the set one, two\par
or you can type define set two to be the set consisting\par
of two and three, it says it are the second type of the\par
finishing set in set function two and three and\par
then you print set two and it will give it two, three.\par
Now, if you want to define an empty set\par
then you can only use the second notation set\par
something or set with this empty set.\par
So, for example empty one, you can write set of nothing\par
and then you ask what is the type of empty it will tell\par
you a set and print empty one, it'll give you set of nothing\par
or you can define empty two to be the set and then you can\par
specify the empty set here and type up empty two or\par
to set or print empty two also set.\par
And you can define, so what you can try to define not a set\par
to be this, so we're trying to use this definition\par
and then if we try to type, type of not a set you get a dict\par
and that's because it defines it as a dictionary\par
and so you should not use this to define empty sets\par
only these two notations, okay.\par
So, this is not an empty set but a dictionary.\par
Alright, now if you want to test membership\par
then you can just type in for example,\par
you can define furniture to be the set containing the\par
desk and the chair and if you test type desk in furniture\par
then Python will tell you that this is true.\par
And if you type bed in furniture it will tell you false\par
because bed was not here, okay.\par
If you want to test whether an element is not in a set\par
then you maybe should expect type not in\par
so you can define furniture to be the same way\par
and you can type desk not in furniture,\par
it will tell you false, because desk is in furniture.\par
And you can type bed not in furniture and (mumbles) true\par
because bed indeed is not in furniture.\par
Finally, let's see how to test with a set is empty\par
and along the way also see how to find the size of the set.\par
So to test if a set is empty, we use the not command\par
and so for example if we define S to be the empty set\par
like that and we ask right not S,\par
what you're really asking is whether S contains no elements.\par
So, not S means that S contains no element and what you'll\par
get here is true because indeed S contains no elements.\par
On the other hand if we define T to consist of two elements\par
one and two and we ask not T, we're asking whether T\par
contains no elements and the answer is going to be false\par
because T does contain elements.\par
Now this may look a little un-intuitive and it is\par
so there's also another way to check whether a set is empty.\par
So, first to find the size of a set in Python,\par
use the len commands, stands for length.\par
So, for example you can type print len of S\par
and S is the empty set will give us zero\par
and print len of T our tell us\par
that T is size two contains these two elements.\par
So we can also check whether a set if empty\par
by checking if it's size is zero.\par
So, namely we check whether length is equal to zero.\par
So, we can type print len of S is zero\par
and the answer is going to be true,\par
because S is zero allowance therefore it's empty\par
and for T we can write (mumbles) print\par
length of T equals two zero we're checking\par
and now the answer is going to be false.\par
Because the length of T the size of T is not zero\par
and that means that T is not empty.\par
So, that's another way of checking if a set is empty\par
just checking if it's size is zero.\par
Okay, so with that we are done\par
and what we have discussed in this lecture\par
are elements and sets and we defined some common sets\par
like the integers, the natural numbers, the positives,\par
the rationals and the reals.\par
And we talked about memberships,\par
belongs to and doesn't belong to and so on,\par
talked about the empty set and the universal set.\par
And what we're going to do next time is\par
talk about some basic sets, see you then.\par
End of transcript. Skip to the start.\par
POLL\par
}
 